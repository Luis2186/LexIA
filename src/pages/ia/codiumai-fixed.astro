---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="CodiumAI - Testing Inteligente | LexIA">
    <main class="min-h-screen bg-black">
        <!-- Hero Section -->
        <section class="relative pt-32 pb-20 overflow-hidden">
            <div
                class="absolute inset-0 bg-gradient-to-b from-black via-pink-950/20 to-black"
            >
            </div>
            <div class="relative max-w-6xl mx-auto px-6">
                <div class="text-center mb-16">
                    <div
                        class="inline-flex items-center px-4 py-2 bg-pink-500/10 rounded-full border border-pink-500/20 mb-6"
                    >
                        <span class="text-pink-400 text-sm font-medium"
                            >Categor√≠a 4: Testing Automatizado</span
                        >
                    </div>
                    <h1 class="text-5xl md:text-7xl font-bold text-white mb-6">
                        <span
                            class="bg-gradient-to-r from-pink-400 via-rose-300 to-red-400 bg-clip-text text-transparent"
                        >
                            CodiumAI
                        </span>
                    </h1>
                    <p
                        class="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed"
                    >
                        üß™ De c√≥digo a test suite completo con IA. Genera tests
                        inteligentes que cubren edge cases, happy paths y
                        scenarios complejos autom√°ticamente.
                    </p>
                </div>
            </div>
        </section>

        <!-- Main Features -->
        <section class="py-20">
            <div class="max-w-6xl mx-auto px-6">
                <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
                    <!-- Feature 1 -->
                    <div
                        class="bg-gradient-to-br from-pink-900/50 to-rose-800/30 rounded-2xl p-8 border border-pink-500/20"
                    >
                        <div class="text-pink-400 text-4xl mb-4">üéØ</div>
                        <h3 class="text-xl font-bold text-white mb-4">
                            Smart Test Generation
                        </h3>
                        <p class="text-gray-300 mb-4">
                            Analiza tu c√≥digo y genera test suites completos con
                            edge cases, boundary conditions y scenarios
                            complejos.
                        </p>
                        <div class="bg-black/40 rounded-lg p-4 text-sm">
                            <code class="text-pink-300">
                                Input: UserController.java<br />
                                Output: 15 tests (unit + integration + edge cases)
                            </code>
                        </div>
                    </div>

                    <!-- Feature 2 -->
                    <div
                        class="bg-gradient-to-br from-rose-900/50 to-red-800/30 rounded-2xl p-8 border border-rose-500/20"
                    >
                        <div class="text-rose-400 text-4xl mb-4">üîç</div>
                        <h3 class="text-xl font-bold text-white mb-4">
                            Intelligent Test Analysis
                        </h3>
                        <p class="text-gray-300 mb-4">
                            Detecta autom√°ticamente qu√© tipos de tests
                            necesitas: unit, integration, performance, security.
                        </p>
                        <div class="bg-black/40 rounded-lg p-4 text-sm">
                            <code class="text-rose-300">
                                ‚Ä¢ Unit tests: 85% coverage<br />
                                ‚Ä¢ Integration tests: API endpoints<br />
                                ‚Ä¢ Performance tests: Load handling
                            </code>
                        </div>
                    </div>

                    <!-- Feature 3 -->
                    <div
                        class="bg-gradient-to-br from-red-900/50 to-pink-800/30 rounded-2xl p-8 border border-red-500/20"
                    >
                        <div class="text-red-400 text-4xl mb-4">‚ö°</div>
                        <h3 class="text-xl font-bold text-white mb-4">
                            Test Suite Optimization
                        </h3>
                        <p class="text-gray-300 mb-4">
                            Optimiza tests existentes, elimina redundancias y
                            sugiere mejoras para maximizar coverage y
                            eficiencia.
                        </p>
                        <div class="bg-black/40 rounded-lg p-4 text-sm">
                            <code class="text-red-300">
                                ‚Ä¢ Reduce 40% execution time<br />
                                ‚Ä¢ Eliminate 60% redundant tests<br />
                                ‚Ä¢ Increase coverage to 95%+
                            </code>
                        </div>
                    </div>
                </div>

                <!-- Practical Example -->
                <div
                    class="bg-gradient-to-r from-pink-900/30 to-rose-900/30 rounded-2xl p-8 border border-pink-500/20 mb-16"
                >
                    <h3
                        class="text-2xl font-bold text-white mb-6 flex items-center"
                    >
                        <span class="text-pink-400 mr-3">üíª</span>
                        Ejemplo Pr√°ctico: REST API Testing
                    </h3>

                    <div class="grid md:grid-cols-2 gap-8">
                        <div>
                            <h4
                                class="text-lg font-semibold text-pink-400 mb-4"
                            >
                                üìù Source Code
                            </h4>
                            <div
                                class="bg-black/50 rounded-lg p-4 text-sm overflow-x-auto"
                            >
                                <pre
                                    class="text-blue-300"><code>@RestController
@RequestMapping("/api/users")
public class UserController &lbrace;
    
    private final UserService userService;
    
    @PostMapping
    public ResponseEntity&lt;UserDTO&gt; createUser(
        @Valid @RequestBody CreateUserRequest request) &lbrace;
        UserDTO user = userService.createUser(request);
        return ResponseEntity.status(201).body(user);
    &rbrace;
    
    @GetMapping("/&lbrace;id&rbrace;")
    public ResponseEntity&lt;UserDTO&gt; getUser(
        @PathVariable Long id) &lbrace;
        return userService.findById(id)
            .map(user -&gt; ResponseEntity.ok(user))
            .orElse(ResponseEntity.notFound().build());
    &rbrace;
&rbrace;</code></pre>
                            </div>
                        </div>

                        <div>
                            <h4
                                class="text-lg font-semibold text-rose-400 mb-4"
                            >
                                üß™ Generated Tests
                            </h4>
                            <div
                                class="bg-black/50 rounded-lg p-4 text-sm overflow-x-auto"
                            >
                                <pre
                                    class="text-green-300"><code>@ExtendWith(MockitoExtension.class)
class UserControllerTest &lbrace;
    
    @Mock private UserService userService;
    @InjectMocks private UserController controller;
    
    // Happy path test
    @Test
    void createUser_validRequest_returnsCreated() &lbrace;
        CreateUserRequest request = new CreateUserRequest(
            "test@example.com", "John Doe", "password123");
        UserDTO expectedUser = new UserDTO(1L, "test@example.com", "John Doe");
        
        when(userService.createUser(request)).thenReturn(expectedUser);
        
        ResponseEntity&lt;UserDTO&gt; response = controller.createUser(request);
        
        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.CREATED);
        assertThat(response.getBody()).isEqualTo(expectedUser);
    &rbrace;
    
    // Edge case - Invalid email
    @Test
    void createUser_invalidEmail_throwsValidationException() &lbrace;
        CreateUserRequest request = new CreateUserRequest(
            "invalid-email", "Name", "password");
        
        assertThrows(MethodArgumentNotValidException.class, 
            () -&gt; controller.createUser(request));
    &rbrace;
&rbrace;</code></pre>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Advanced Testing Scenarios -->
                <div class="grid md:grid-cols-2 gap-8 mb-16">
                    <div
                        class="bg-gradient-to-br from-pink-800/40 to-rose-700/20 rounded-2xl p-8 border border-pink-500/20"
                    >
                        <h3
                            class="text-2xl font-bold text-white mb-6 flex items-center"
                        >
                            <span class="text-pink-400 mr-3">üéØ</span>
                            Performance Testing
                        </h3>
                        <div class="space-y-4">
                            <div class="bg-black/40 rounded-lg p-4">
                                <h4 class="text-pink-300 font-semibold mb-2">
                                    Load Test Auto-Generated
                                </h4>
                                <pre
                                    class="text-gray-300 text-sm"><code>// Generated performance test
@Test
void createUser_concurrentRequests_handlesLoad() &lbrace;
    int numberOfThreads = 100;
    CountDownLatch startLatch = new CountDownLatch(1);
    CountDownLatch completionLatch = new CountDownLatch(numberOfThreads);
    AtomicInteger successCount = new AtomicInteger(0);
    
    for (int i = 0; i &lt; numberOfThreads; i++) &lbrace;
        final int threadId = i;
        new Thread(() -&gt; &lbrace;
            try &lbrace;
                startLatch.await();
                long startTime = System.currentTimeMillis();
                
                ResponseEntity&lt;String&gt; response = restTemplate.getForEntity(
                    "/api/users/" + threadId, String.class);
                
                if (response.getStatusCode().is2xxSuccessful()) &lbrace;
                    successCount.incrementAndGet();
                &rbrace;
            &rbrace; catch (InterruptedException e) &lbrace;
                Thread.currentThread().interrupt();
            &rbrace; finally &lbrace;
                completionLatch.countDown();
            &rbrace;
        &rbrace;).start();
    &rbrace;
    
    startLatch.countDown();
    completionLatch.await();
    
    double successRate = (double) successCount.get() / numberOfThreads;
    assertThat(successRate).isGreaterThan(0.95); // &gt; 95% success rate
&rbrace;</code></pre>
                            </div>
                        </div>
                    </div>

                    <div
                        class="bg-gradient-to-br from-rose-800/40 to-red-700/20 rounded-2xl p-8 border border-rose-500/20"
                    >
                        <h3
                            class="text-2xl font-bold text-white mb-6 flex items-center"
                        >
                            <span class="text-rose-400 mr-3">üìä</span>
                            ROI Cuantificado
                        </h3>
                        <div class="space-y-6">
                            <div>
                                <div
                                    class="flex justify-between text-white mb-2"
                                >
                                    <span>Reducci√≥n Tiempo Testing</span>
                                    <span class="font-bold text-pink-400"
                                        >80%</span
                                    >
                                </div>
                                <div
                                    class="w-full bg-gray-700 rounded-full h-2"
                                >
                                    <div
                                        class="bg-gradient-to-r from-pink-500 to-rose-400 h-2 rounded-full"
                                        style="width: 80%"
                                    >
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div
                                    class="flex justify-between text-white mb-2"
                                >
                                    <span>Cobertura de C√≥digo</span>
                                    <span class="font-bold text-pink-400"
                                        >95%</span
                                    >
                                </div>
                                <div
                                    class="w-full bg-gray-700 rounded-full h-2"
                                >
                                    <div
                                        class="bg-gradient-to-r from-pink-500 to-rose-400 h-2 rounded-full"
                                        style="width: 95%"
                                    >
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div
                                    class="flex justify-between text-white mb-2"
                                >
                                    <span>Bugs Detectados Pre-Prod</span>
                                    <span class="font-bold text-pink-400"
                                        >92%</span
                                    >
                                </div>
                                <div
                                    class="w-full bg-gray-700 rounded-full h-2"
                                >
                                    <div
                                        class="bg-gradient-to-r from-pink-500 to-rose-400 h-2 rounded-full"
                                        style="width: 92%"
                                    >
                                    </div>
                                </div>
                            </div>
                            <div class="bg-pink-900/50 rounded-lg p-4 mt-4">
                                <p class="text-pink-300 text-sm">
                                    <strong>ROI en 3 meses:</strong> Empresa con
                                    50 devs reporta $120K ahorro anual en QA + 90%
                                    menos bugs en producci√≥n
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Integration & Technical Details -->
                <div
                    class="bg-gradient-to-r from-pink-900/30 to-rose-900/30 rounded-2xl p-8 border border-pink-500/20 mb-16"
                >
                    <h3
                        class="text-2xl font-bold text-white mb-8 flex items-center"
                    >
                        <span class="text-pink-400 mr-3">üîß</span>
                        Integraci√≥n T√©cnica
                    </h3>

                    <div class="grid md:grid-cols-3 gap-8">
                        <div>
                            <h4
                                class="text-lg font-semibold text-pink-400 mb-4"
                            >
                                IDEs Soportados
                            </h4>
                            <ul class="space-y-2 text-gray-300">
                                <li>‚Ä¢ VS Code extension</li>
                                <li>‚Ä¢ IntelliJ IDEA plugin</li>
                                <li>‚Ä¢ Eclipse integration</li>
                                <li>‚Ä¢ CLI tool for CI/CD</li>
                            </ul>
                        </div>

                        <div>
                            <h4
                                class="text-lg font-semibold text-rose-400 mb-4"
                            >
                                Testing Frameworks
                            </h4>
                            <div class="bg-black/40 rounded-lg p-3 text-sm">
                                <code class="text-rose-300">
                                    ‚Ä¢ JUnit 5, TestNG (Java)<br />
                                    ‚Ä¢ Jest, Mocha (JavaScript)<br />
                                    ‚Ä¢ pytest (Python)<br />
                                    ‚Ä¢ RSpec (Ruby)
                                </code>
                            </div>
                        </div>

                        <div>
                            <h4 class="text-lg font-semibold text-red-400 mb-4">
                                Enterprise Features
                            </h4>
                            <ul class="space-y-2 text-gray-300">
                                <li>‚Ä¢ Team analytics dashboard</li>
                                <li>‚Ä¢ Custom test templates</li>
                                <li>‚Ä¢ SAML/SSO integration</li>
                                <li>‚Ä¢ Compliance reporting</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Navigation -->
                <div
                    class="flex justify-between items-center pt-8 border-t border-gray-800"
                >
                    <a
                        href="/ia/herramientas-ia"
                        class="flex items-center text-pink-400 hover:text-pink-300 transition-colors"
                    >
                        <svg
                            class="w-5 h-5 mr-2"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M15 19l-7-7 7-7"></path>
                        </svg>
                        Volver a Herramientas IA
                    </a>
                    <a
                        href="/ia/diffblue-cover"
                        class="flex items-center text-pink-400 hover:text-pink-300 transition-colors"
                    >
                        Siguiente: Diffblue Cover
                        <svg
                            class="w-5 h-5 ml-2"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M9 5l7 7-7 7"></path>
                        </svg>
                    </a>
                </div>
            </div>
        </section>
    </main>
</Layout>
